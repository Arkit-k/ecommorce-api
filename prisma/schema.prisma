// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id     String @id @default(uuid())
  email String @unique
  password String
  name    String
  role   Role @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cart Cart?
  orders Order[]
}

enum Role {
  USER
  Admin
}

model Product {
  id  String @id @default(uuid())
  name   String
  description String
  price Float
  imageUrl String
  stock   Int     @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cartItems CartItem[]
  orderItems OrderItem[]
}

model CartItem {
  id   String  @id @default(uuid())
  cartId    String 
  productId String
  quantity  Int
  cart Cart @relation(fields: [cartId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([cartId, productId])
}

model Order {
  id      String @id @default(uuid())
  userId  String
  user   User @relation(fields: [userId], references: [id])
  items   OrderItem[]
  total   Float
  status  OrderStatus @default(PENDING)
  paymentId    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OrderItem {
  id String @id @default(uuid())
  orderId String
  productId String
  quantity Int
  product Product @relation(fields: [productId], references: [id])
  order Order @relation(fields: [orderId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum OrderStatus {
  PENDING
  PAID
  DELIVERED
}

model Cart {
  id   String @id @default(uuid())
  userId String @unique
  user  User @relation(fields: [userId], references: [id])
  items CartItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}